# Generated by Django 1.11.27 on 2020-04-16 15:58


from django.db import migrations


def change_learners_course_run(apps, schema_editor):
    """
    There are two course runs for course-v1:TUMx+QPLS2x+2T2018 and
    one of them is excluded from the program. But user grades are
    associated with excluded course run. That's why in program record
    status of the course course-v1:TUMx+QPLS2x+2T2018 is not earned for
    the learners even though learners program is completed.
    PROD-1443

    Changing course run id in user grade would fix that issue.

    """

    excluded_run, included_run = get_course_runs(apps, 119, 8112)

    if excluded_run and included_run:
        update_course_run_id(apps, excluded_run, included_run)


def reverse_change_learners_course_run(apps, schema_editor):

    excluded_run, included_run = get_course_runs(apps, 8112, 119)

    if excluded_run and included_run:
        update_course_run_id(apps, excluded_run, included_run)


def get_course_runs(apps, excluded_run_id, included_run_id):
    """
    get excluded and included course runs based on the id
    """
    CourseRun = apps.get_model("catalog", "CourseRun")
    courses = CourseRun.objects.filter(key="course-v1:TUMx+QPLS2x+2T2018")
    excluded_run = None
    included_run = None
    if courses:
        excluded_run = courses.filter(id=excluded_run_id).first()
        included_run = courses.filter(id=included_run_id).first()

    return excluded_run, included_run


def update_course_run_id(apps, excluded_run, included_run):
    """
    update the learner course run id in grades
    """
    UserGrade = apps.get_model("records", "UserGrade")
    UserGrade.objects.filter(course_run_id=excluded_run.id).update(course_run_id=included_run.id)


class Migration(migrations.Migration):

    dependencies = [
        ("records", "0017_ProgramCertRecord_unique_constraint"),
    ]

    operations = [migrations.RunPython(change_learners_course_run, reverse_code=reverse_change_learners_course_run)]
